/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package metodo_arbol;

import java.io.BufferedReader;
import java.io.StringReader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;

/**
 *
 * @author samuel
 */
public class gui extends javax.swing.JFrame {

    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        entradaExpresion = new javax.swing.JTextField();
        botonEjecutar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuPrograma = new javax.swing.JMenu();
        itemEjecutar = new javax.swing.JMenuItem();
        intemLimpiar = new javax.swing.JMenuItem();
        itemCerrar = new javax.swing.JMenuItem();
        menuReportes = new javax.swing.JMenu();
        itemAbrirCarpeta = new javax.swing.JMenuItem();
        itemBorrarReportes = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        acercaDe = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(115, 144, 114));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 250, 230));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Expresion Regular");

        entradaExpresion.setBackground(new java.awt.Color(255, 250, 230));
        entradaExpresion.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        entradaExpresion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        entradaExpresion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        botonEjecutar.setBackground(new java.awt.Color(58, 77, 57));
        botonEjecutar.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        botonEjecutar.setForeground(new java.awt.Color(255, 250, 230));
        botonEjecutar.setText("Ejecutar");
        botonEjecutar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEjecutarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(entradaExpresion)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(botonEjecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(entradaExpresion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(botonEjecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(58, 77, 57));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenuBar1.setForeground(new java.awt.Color(255, 250, 230));
        jMenuBar1.setToolTipText("");

        menuPrograma.setForeground(new java.awt.Color(255, 250, 230));
        menuPrograma.setText("Programa");
        menuPrograma.setFont(new java.awt.Font("Noto Sans", 1, 13)); // NOI18N

        itemEjecutar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        itemEjecutar.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        itemEjecutar.setText("Ejecutar");
        itemEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEjecutarActionPerformed(evt);
            }
        });
        menuPrograma.add(itemEjecutar);

        intemLimpiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        intemLimpiar.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        intemLimpiar.setText("Limpiar Entrada");
        intemLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intemLimpiarActionPerformed(evt);
            }
        });
        menuPrograma.add(intemLimpiar);

        itemCerrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        itemCerrar.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        itemCerrar.setText("Cerrar Programa");
        itemCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCerrarActionPerformed(evt);
            }
        });
        menuPrograma.add(itemCerrar);

        jMenuBar1.add(menuPrograma);

        menuReportes.setForeground(new java.awt.Color(255, 250, 230));
        menuReportes.setText("Reportes");
        menuReportes.setToolTipText("");
        menuReportes.setFont(new java.awt.Font("Noto Sans", 1, 13)); // NOI18N

        itemAbrirCarpeta.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        itemAbrirCarpeta.setText("Abrir Carpeta de Reportes");
        itemAbrirCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAbrirCarpetaActionPerformed(evt);
            }
        });
        menuReportes.add(itemAbrirCarpeta);

        itemBorrarReportes.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        itemBorrarReportes.setText("Borrar reportes");
        itemBorrarReportes.setToolTipText("");
        itemBorrarReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBorrarReportesActionPerformed(evt);
            }
        });
        menuReportes.add(itemBorrarReportes);

        jMenuBar1.add(menuReportes);

        menuAyuda.setForeground(new java.awt.Color(255, 250, 230));
        menuAyuda.setText("Ayuda");
        menuAyuda.setFont(new java.awt.Font("Noto Sans", 1, 13)); // NOI18N

        jMenuItem4.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        jMenuItem4.setText("Intrucciones");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuAyuda.add(jMenuItem4);

        acercaDe.setFont(new java.awt.Font("Noto Sans", 0, 13)); // NOI18N
        acercaDe.setText("Acerca de");
        acercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaDeActionPerformed(evt);
            }
        });
        menuAyuda.add(acercaDe);

        jMenuBar1.add(menuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void itemCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCerrarActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_itemCerrarActionPerformed

    private void botonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEjecutarActionPerformed
        // TODO add your handling code here:
        
        int yesOrNo = JOptionPane.showConfirmDialog(null, "Sobrescribiras los datos que ya hayan sido creados\n¿Estás seguro de ejecutar?", "Cuidado ", 
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);       

        if (yesOrNo == 0) {
            // Declarar lista para la tabla de transiciones 
            for (int i = 1; i < tabla_transiciones.followsNodos.length; i++){
                tabla_transiciones.followsNodos[i] = new ArrayList<>();
            }


            String textoAnalizar = "(" + entradaExpresion.getText() + ").#";

            tabla_transiciones tempTransiciones = new tabla_transiciones(textoAnalizar);
            automata tempAutomata = new automata(textoAnalizar);

            funciones.abrirArchivoArbol(textoAnalizar);
            tempTransiciones.abrirArchivoTransiciones();


            Analizadores.Sintactico parser;
            try {
                parser = new Analizadores.Sintactico(new Analizadores.Lexico(new BufferedReader(new StringReader(textoAnalizar))));
                parser.parse(); 

                // Arbol
                funciones.escribirDotArbol("\n    { rank = same; " + funciones.sameRank + " }\n}");
                funciones.generarSVG();


                // Tabla de transiciones y siguientes
                tempTransiciones.realizarTransiciones(); 
                tempTransiciones.generarTablaSiguientes();
                tempTransiciones.imprimirTabla(); 

                // Automata
                tempAutomata.crearAutomata();

                JOptionPane.showMessageDialog(null, "El proceso se ha completado exitosamente.", "Proceso Completado", JOptionPane.INFORMATION_MESSAGE);


            } catch (Exception e) {
                System.out.println("Error fatal en compilación de entrada.");
                
                ProcessBuilder processBuilder = new ProcessBuilder();

                if (Metodo_arbol.sistemaOperativo.equals("linux")){
                    String comando = "xdg-open ./Reportes";
                    processBuilder.command("bash", "-c", comando);
                } else {
                    processBuilder.command("cmd.exe", "/c", "start", ".\\Reportes");
                }

                try {
                    // Inicia el proceso
                    Process proceso = processBuilder.start();
                    int exitCode = proceso.waitFor();       
                } catch (IOException | InterruptedException error) {
                }
            }  
            
            // Limpiar datos
            tempAutomata.limpiarElementos();
            tempTransiciones.limpiarElementos();
            funciones.limpiarElementos();
        }
    }//GEN-LAST:event_botonEjecutarActionPerformed

    private void intemLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intemLimpiarActionPerformed
        // TODO add your handling code here:
        entradaExpresion.setText("");
    }//GEN-LAST:event_intemLimpiarActionPerformed

    private void itemEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEjecutarActionPerformed
        // TODO add your handling code here:
        botonEjecutarActionPerformed(evt);
    }//GEN-LAST:event_itemEjecutarActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
   
        // Abrir el archivo de Informacion
        try {
            String enlace = "https://github.com/SmillerMP/Metodo_del_Arbol/blob/main/README.md";
            URI uri = new URI(enlace);
            Desktop.getDesktop().browse(uri);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void itemAbrirCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAbrirCarpetaActionPerformed
        // TODO add your handling code here:
        
        ProcessBuilder processBuilder = new ProcessBuilder();

        if (Metodo_arbol.sistemaOperativo.equals("linux")){
            String comando = "xdg-open ./Reportes";
            processBuilder.command("bash", "-c", comando);
        } else {
            processBuilder.command("cmd.exe", "/c", "start", ".\\Reportes");
        }
        
        try {
            // Inicia el proceso
            Process proceso = processBuilder.start();
            int exitCode = proceso.waitFor();       
        } catch (IOException | InterruptedException e) {
        }
    }//GEN-LAST:event_itemAbrirCarpetaActionPerformed

    private void itemBorrarReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBorrarReportesActionPerformed
        // TODO add your handling code here:

        int yesOrNo = JOptionPane.showConfirmDialog(null, "Se eliminaran todos los reportes de la ejecución anterior\n¿Estás seguro de borrar?", "Cuidado ", 
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);       
        
        if (yesOrNo == 0) {
            ProcessBuilder processBuilder = new ProcessBuilder();
            
            if (Metodo_arbol.sistemaOperativo.equals("linux")){
                String comando = "rm -r ./Reportes/*"; 
                processBuilder.command("bash", "-c", comando);
            } else {
                processBuilder.command("cmd.exe", "/c", "del /q /s", ".\\Reportes\\*");
            }
            
            try {
                // Inicia el proceso
                Process proceso = processBuilder.start();
                int exitCode = proceso.waitFor();       
            } catch (IOException | InterruptedException e) {
            }
        }
    }//GEN-LAST:event_itemBorrarReportesActionPerformed

    private void acercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaDeActionPerformed
        // TODO add your handling code here:
        acerca_de info = new acerca_de();
        info.setVisible(true);
    }//GEN-LAST:event_acercaDeActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem acercaDe;
    private javax.swing.JButton botonEjecutar;
    private javax.swing.JTextField entradaExpresion;
    private javax.swing.JMenuItem intemLimpiar;
    private javax.swing.JMenuItem itemAbrirCarpeta;
    private javax.swing.JMenuItem itemBorrarReportes;
    private javax.swing.JMenuItem itemCerrar;
    private javax.swing.JMenuItem itemEjecutar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuPrograma;
    private javax.swing.JMenu menuReportes;
    // End of variables declaration//GEN-END:variables
}
